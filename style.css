https://github.com/spmallick/learnopencv/blob/master/Automatic-Document-Scanner/Document_scanning.ipynb
def vali_smth():
    # Set up the SimpleBlobDetector parameters
    image = cv2.imread("temp_img_store/OTM_CHECK1.jpg")
    
    # Convert to grayscale
    gray = cv2.cvtColor(image, cv2.COLOR_BGR2GRAY)
    
    # Apply thresholding
    _, thresh = cv2.threshold(gray, 0, 255, cv2.THRESH_BINARY_INV + cv2.THRESH_OTSU)

    params = cv2.SimpleBlobDetector_Params()
    
    # Change thresholds
    params.minThreshold = 10
    params.maxThreshold = 1000
    # Filter by Area.
    params.filterByArea = True
    params.minArea = 150  # Adjust depending on the size of your blobs
    # Filter by Circularity
    params.filterByCircularity = True
    params.minCircularity = 0.1
    # Filter by Convexity
    params.filterByConvexity = False
    params.minConvexity = 0.2
    # Filter by Inertia
    params.filterByInertia = False
    params.minInertiaRatio = 0.01
    # Create a detector with the parameters
    detector = cv2.SimpleBlobDetector_create(params)
    
    # Detect blobs
    keypoints = detector.detect(thresh)
    keypoints_list= [(kp.pt[0], kp.pt[1], kp.size) for kp in keypoints]
    keypoints_list.sort(key=lambda x: x[2], reverse= True)
    keypoints_list=keypoints_list[:5]

    
    keypoints= [cv2.KeyPoint(x=kp[0],y=kp[1], size=kp[2]) for kp in keypoints_list]
    print(keypoints)
    for point in keypoints_list:
        xr,yr = map(int, point)
        cv2.circle(image,(xr,yr),5,(0,0,255),-1)

    cv2.imshow("lol",image)
    cv2.waitKey(0)
    cv2.destroyAllWindows()

    keypoints_list.sort(key=lambda x: x[1], reverse= True)


    if len(keypoints_list)==5:
        return "Frequency - INVALID (NOT FILLED)"
    else:
        return "Frequency - VALID"
    

vali_smth()
