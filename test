import cv2
import matplotlib.pyplot as plt

# Assuming you have already defined 'image2' and 'binary'

# Make a copy of the source image.
image2_copy2 = image2.copy()

# Find the contours from the thresholded image.
contours, hierarchy = cv2.findContours(binary, cv2.RETR_LIST, cv2.CHAIN_APPROX_SIMPLE)

# Filter contours that are squares
square_contours = []
for contour in contours:
    # Approximate the contour to a polygon
    epsilon = 0.02 * cv2.arcLength(contour, True)
    approx = cv2.approxPolyDP(contour, epsilon, True)
    
    # If the polygon has four vertices, it's likely a square
    if len(approx) == 4:
        square_contours.append(contour)

# Draw only the square contours
image2_copy2 = cv2.drawContours(image2_copy2, square_contours, -1, (0, 0, 255), 2)

# Plot both results for comparison
plt.figure(figsize=[15, 15])
plt.subplot(121)
plt.imshow(image2_copy[:, :, ::-1])
plt.title("Without Thresholding")
plt.axis('off')

plt.subplot(122)
plt.imshow(image2_copy2[:, :, ::-1])
plt.title("With Thresholding (Squares only)")
plt.axis('off')

plt.show()
