import cv2
import numpy as np

# Load the image
image = cv2.imread('table_image.jpg', 0)  # Load as grayscale

# Apply adaptive thresholding to binarize the image
# Adjust parameters blockSize and C for optimal results
blockSize = 25  # Adjust block size as needed
C = 10  # Adjust constant as needed
thresh = cv2.adaptiveThreshold(image, 255, cv2.ADAPTIVE_THRESH_MEAN_C, cv2.THRESH_BINARY_INV, blockSize, C)

# Find contours
contours, _ = cv2.findContours(thresh, cv2.RETR_EXTERNAL, cv2.CHAIN_APPROX_SIMPLE)

# Draw rectangles around all detected contours
for contour in contours:
    x, y, w, h = cv2.boundingRect(contour)
    cv2.rectangle(image, (x, y), (x + w, y + h), (0, 0, 255), 2)  # Mark the rectangle in red

# Display the result
cv2.imshow('Detected Rectangles', image)
cv2.waitKey(0)
cv2.destroyAllWindows()
