def detect_squares(thresh):
    # Find contours
    contours, _ = cv2.findContours(thresh, cv2.RETR_EXTERNAL, cv2.CHAIN_APPROX_SIMPLE)

    # Filter contours to find squares
    squares = []
    for contour in contours:
        perimeter = cv2.arcLength(contour, True)
        approx = cv2.approxPolyDP(contour, 0.04 * perimeter, True)
        if len(approx) == 4:  # Checking if the contour is a square
            squares.append(contour)

    # Draw squares on a blank image
    square_image = np.zeros_like(thresh)
    cv2.drawContours(square_image, squares, -1, (255, 0, 0), 2)

    return square_image
